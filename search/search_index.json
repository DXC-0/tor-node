{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Tor-Node/","title":"Tor Node","text":""},{"location":"Tor-Node/#introduction","title":"Introduction","text":"<p> As a reminder, tor is a project allowing everyone to obtain a satisfactory level of anonymity and replacing the usual VPNs. The project is not linked to a private company and the relays are all operated by volunteers or third party groups. The fact that the set is semi-decentralized, forcing you to pass several rebounds, allows you to cover your location on the internet. This is useful in highly censored, dictatorial countries or in regimes where freedom of expression begins to be undermined. It also serves poor people, without money, anonymity should be a right and not a luxury, which is why many actors help the tor project to continue to exist and provide broadband for the network. Here we will see how to deploy a secure server running a rebound for the tor network. </p>"},{"location":"Tor-Node/#server-deployment","title":"Server Deployment","text":""},{"location":"Tor-Node/#chose-a-solid-distribution","title":"Chose a solid distribution","text":"<p>First chose a correct distribution. I love minimalist rolling distributions with arch, but most cloud providers do not offer this option.</p> <ul> <li>Archlinux</li> <li>Debian / Ubuntu</li> <li>Red Hat Bases (Fedora, Alma, Rocky ...)</li> </ul>"},{"location":"Tor-Node/#connect-with-root-and-create-an-user","title":"Connect with root and create an user","text":"<p>The first step is to connect with the root account provided by the cloud provider. Create a new user and add it to the wheel sudo group, if it is not present, install it.</p> <pre><code>useradd srv-admin\npasswd srv-admin\nusermod -aG wheel srv-admin\n</code></pre> <p>Well, you now have a clean user, so we'll already be able to secure a little ssh and prevent connections to the root and old cloud provider password.</p> <ul> <li>Here we have changed the default port on 5588 (this avoids most bots that scan on 22 defaut ssh)</li> <li>We forbid root connection</li> <li>We limit sessions to one</li> <li>Also, we block attempts to up to three</li> <li>We remove X11 and all horrible stuff</li> </ul> <p>Go to the directory /etc/ssh and open sshd_config and modify with :</p> <pre><code>Protocol 2\nPort 5588\nPermitRootLogin no\nMaxAuthTries 3\nMaxSessions 1\nAllowUsers \"srv-admin\"\nDenyUsers root\nAuthorizedKeysFile  .ssh/authorized_keys\nKbdInteractiveAuthentication no\nUsePAM yes\nAllowTcpForwarding no\nAllowAgentForwarding no\nPermitTunnel no\nLoginGraceTime 300\nX11Forwarding no\nClientAliveInterval 0\nPermitTTY no\nPrintMotd no\nBanner /etc/banner.exemple\nSubsystem   sftp    /usr/lib/ssh/sftp-server\nLogLevel VERBOSE\n</code></pre> <p></p>"},{"location":"Tor-Node/#firewalld-configuration","title":"Firewalld configuration","text":"<p>Here we add firewalld and reject all connections except those on the custom ssh port (5588). We also put the port chosen for tor (here 9696)</p> <ul> <li>Install firewalld for network security</li> </ul> <pre><code>yay -S firewalld\nsudo systemctl enable --now firewalld.service\nsudo firewall-cmd --set-default-zone=block\nsudo firewall-cmd --add-port=5588/tcp --zone=block --permanent\nsudo firewall-cmd --add-port=9696/tcp --zone=block --permanent\n</code></pre> <p>Reload and restart the service : </p> <pre><code>sudo firewall-cmd --reload\nsudo systemctl restart firewalld.service\n</code></pre> <p></p>"},{"location":"Tor-Node/#hardening","title":"Hardening","text":"<p>Modify the /etc/passwd file and change root line with : </p> <pre><code>root:x:0:0:root:/root:/sbin/nologin\n</code></pre> <p>Disable TTY access :</p> <pre><code>sudo rm -rf /etc/securetty\nsudo touch /etc/securetty\nsudo chmod 600 /etc/securetty\n</code></pre> <p>Enforce the PAM configuration : </p> <pre><code>sudo nano /etc/pam.d/login\n</code></pre> <p>Edit the file with theses lines : </p> <pre><code>auth    required       pam_listfile.so \\\n        onerr=succeed  item=user  sense=deny  file=/etc/ssh/deniedusers\n</code></pre> <p>Restric file modification : </p> <pre><code>chmod 600 /etc/ssh/deniedusers\n</code></pre> <p>Edit the file <code>sudo nano /etc/ssh/deniedusers</code> and add \"root\"</p> <p>Disable root password and groups :</p> <pre><code>sudo passwd -l root\nsudo usermod -L root\n</code></pre> <p>Install and enable fail2ban : </p> <pre><code>yay -S fail2ban\nsudo systemctl enable --now fail2ban.service\n</code></pre> <p>Enable SSH jail : </p> <pre><code>sudo nano /etc/fail2ban/jail.local\n</code></pre> <pre><code>[sshd]\n\nenabled = true\nport = 5588\nfilter = sshd\nlogpath = /var/log/auth.log\nmaxretry = 3\nbantime = 1w\n</code></pre> <p>Reload and restart fail2ban</p> <pre><code>sudo systemctl reload fail2ban.service &amp;&amp; sudo systemctl restart fail2ban.service\n</code></pre> <p>Install AppArmor (MAC module): </p> <pre><code>yay -S apparmor\n</code></pre> <p>Edit kernel parameters : </p> <pre><code>\nsudo nano /etc/boot/XXXXXlinux.conf\n\n</code></pre> <p>Add this line : </p> <pre><code>lsm=landlock,lockdown,yama,integrity,apparmor,bpf\n</code></pre> <p>Reboot the server and check if apparmor is active : </p> <pre><code>aa-status\n</code></pre> <p>Enforce defaults profiles : </p> <pre><code>aa-enforce /etc/apparmor.d/*\n</code></pre> <p></p>"},{"location":"Tor-Node/#tor-installation-archlinux","title":"Tor installation (Archlinux)","text":"<p>Install tor on the concerned server :</p> <pre><code>yay -S tor\n</code></pre> <p>Modify the Torrc file with your custom configuration : </p> <pre><code>sudo nano /etc/tor/torrc\n</code></pre> <p>Paste the configuration :</p> <pre><code>User tor #user for daemon work\nLog notice syslog\nDataDirectory /var/lib/tor\nORPort 9696 #External port recheable for tor\nORPort 443 NoListen \nORPort 127.0.0.1:9090 NoAdvertise\nNickname TorIsMyFriend #RelayName (visible on tor metrics)\nContactInfo DXC-0 #Optional (visible on tor metrics)\nMyFamily 8764E9BE25CE405C76E1DD0F0937D9BF6EA16A0C #IMPORTANT !!! Paste all of your relays hashes\nExitPolicy reject *:* # no exits allowed\nExitRelay 0 #prohibit exit\nSocksPort 0\n</code></pre> <p>Start the service : </p> <pre><code>sudo systemctl enable --now tor.service\n</code></pre> <p></p>"},{"location":"Tor-Node/#tor-installation-debian","title":"Tor installation (Debian)","text":"<p>Install apt-transport-https :</p> <pre><code>sudo apt install apt-transport-https\n</code></pre> <p>Create source list : </p> <pre><code>sudo nano /etc/apt/sources.list.d/tor.list\n</code></pre> <p>Detect the codename : </p> <pre><code>lsb_release -c\n</code></pre> <p>Add these lanes to the file : </p> <pre><code>deb     [signed-by=/usr/share/keyrings/deb.torproject.org-keyring.gpg] https://deb.torproject.org/torproject.org &lt;CODENAME&gt; main\ndeb-src [signed-by=/usr/share/keyrings/deb.torproject.org-keyring.gpg] https://deb.torproject.org/torproject.org &lt;CODENAME&gt; main\n</code></pre> <p>Install gnupg :</p> <pre><code>sudo apt install gnupg\n</code></pre> <p>Add GPG keys : </p> <pre><code>wget -qO- https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --dearmor | tee /usr/share/keyrings/deb.torproject.org-keyring.gpg &gt;/dev/null\n</code></pre> <p>Update and install tor : </p> <pre><code>apt update\napt install tor deb.torproject.org-keyring\n</code></pre> <p>Modify the Torrc file with your custom configuration : </p> <pre><code>sudo nano /etc/tor/torrc\n</code></pre> <p>Paste the configuration :</p> <pre><code>User debian-tor #user for daemon work\nLog notice syslog\nDataDirectory /var/lib/tor\nORPort 9696 #External port recheable for tor\nORPort 443 NoListen\nORPort 127.0.0.1:9090 NoAdvertise\nNickname TorIsMyFriend #RelayName (visible on tor metrics)\nContactInfo DXC-0 #Optional (visible on tor metrics)\nMyFamily 8764E9BE25CE405C76E1DD0F0937D9BF6EA16A0C #IMPORTANT !!! Paste all of your relays hashes\nExitPolicy reject *:* # no exits allowed # no exits allowed\nExitRelay 0 #prohibit exit\nSocksPort 0\n</code></pre> <p>Start the service : </p> <pre><code>sudo systemctl enable --now tor@default.service\n</code></pre>"}]}